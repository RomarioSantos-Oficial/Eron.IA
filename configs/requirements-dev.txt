# ====================
# ERON.IA - DEPENDÊNCIAS DE DESENVOLVIMENTO
# ====================
# Instale com: pip install -r requirements-dev.txt

# Inclui todas as dependências de produção
-r requirements.txt

# ====================
# TESTING
# ====================
# Framework de testes
pytest==7.4.3
pytest-cov==4.1.0
pytest-mock==3.12.0
pytest-asyncio==0.21.1

# Testes para Flask
pytest-flask==1.3.0

# Testes para Telegram Bot
pytest-telegram-bot==0.1.0

# ====================
# LINTING E FORMATAÇÃO
# ====================
# Linter principal
flake8==6.1.0
pylint==3.0.3

# Formatador de código
black==23.11.0
isort==5.12.0

# Verificação de tipos
mypy==1.7.1

# ====================
# DEBUGGING AVANÇADO
# ====================
# Debugger interativo
ipdb==0.13.13
pdbpp==0.10.3

# Para debugging de performance
py-spy==0.3.14

# ====================
# DOCUMENTAÇÃO
# ====================
# Para gerar documentação automática
sphinx==7.2.6
sphinx-rtd-theme==1.3.0

# ====================
# ANÁLISE DE CÓDIGO
# ====================
# Análise de complexidade de código
radon==6.0.1
# Verificação de segurança
bandit==1.7.5
# Análise de dependências
safety==2.3.5

# ====================
# UTILITÁRIOS DE DEV
# ====================
# Para reload automático em desenvolvimento
watchdog==3.0.0
# Para profiling detalhado
line_profiler==4.1.1

# ====================
# DATABASE TOOLS
# ====================
# Para inspeção de banco SQLite
sqlite-utils==3.35.2

# ====================
# HTTP E API TESTING
# ====================
# Para testes de API
httpx==0.25.2
responses==0.24.1

# ====================
# MOCK E FIXTURES
# ====================
# Para criar mocks avançados
factory-boy==3.3.0
faker==20.1.0

# ====================
# CONTINUOUS INTEGRATION
# ====================
# Para coverage reports
coverage==7.3.2
# Para integração com CI/CD
tox==4.11.4

# ====================
# COMANDOS ÚTEIS
# ====================
# Instalar tudo: pip install -r requirements-dev.txt
# Rodar testes: pytest
# Formatar código: black . && isort .
# Verificar linting: flake8 . && pylint src/
# Coverage: pytest --cov=src tests/
# Análise de segurança: bandit -r src/
# Verificar tipos: mypy src/